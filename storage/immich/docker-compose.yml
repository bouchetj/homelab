networks:
  walle-network:
    external: true
  edge:
    external: true

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich-server
    depends_on:
      - immich-redis
      - immich-db
    env_file: .env
    labels:
      glance.name: Immich
      glance.icon: si:immich
      glance.url: https://photos.jubslab.org
      glance.description: Self-hosted photo backup
      glance.hide: false
    volumes:
      - ${UPLOAD_LOCATION}:/data
      - ${THUMB_LOCATION}:/data/thumbs
      - ${ENCODED_VIDEO_LOCATION}:/data/encoded-video
      - ${PROFILE_LOCATION}:/data/profile
      - ${BACKUP_LOCATION}:/data/backups
      - ${LIBRARY_LOCATION}:/data/library
      - /mnt/media/immich/library-photos:/library
    restart: unless-stopped
    networks:
      - walle-network
      - edge

  immich-microservices:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich-microservices
    command: ["start.sh", "microservices"]
    env_file: .env
    volumes:
      - ${UPLOAD_LOCATION}:/data
      - ${THUMB_LOCATION}:/data/thumbs
      - ${ENCODED_VIDEO_LOCATION}:/data/encoded-video
      - ${PROFILE_LOCATION}:/data/profile
      - ${BACKUP_LOCATION}:/data/backups
      - ${LIBRARY_LOCATION}:/data/library
      - /mnt/media/immich/library-photos:/library
    depends_on:
      - immich-redis
      - immich-db
    restart: unless-stopped
    networks: [walle-network]

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    container_name: immich-ml
    env_file: .env
    volumes:
      - ./model-cache:/cache
    restart: unless-stopped
    networks: [walle-network]

  immich-redis:
    image: redis:7-alpine
    container_name: immich-redis
    restart: unless-stopped
    networks: [walle-network]

  immich-db:
    image: ghcr.io/immich-app/postgres:16-vectorchord0.3.0-pgvectors0.3.0
    container_name: immich-db
    env_file: .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
    volumes:
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE_NAME} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [walle-network]
